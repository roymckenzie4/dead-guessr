{"version":3,"sources":["KeyListener.jsx","GuessPanel/OldGuessDisplay.jsx","GuessPanel/GuessSelector.jsx","GuessPanel/GuessPanel.jsx","AudioPlayer.jsx","ScoreDisplay.jsx","App.js","index.js"],"names":["KeyListener","props","useEffect","handleKeyUp","e","window","document","addEventListener","removeEventListener","OldGuessDisplay","oldGuesses","map","guess","react_default","a","createElement","className","i","key","trueYear","Math","abs","charAt","GuessSelector","result","currentGuess","style","fontSize","songData","songTitle","songDate","songLocation","GuessPanel","_ref","hasStarted","hasGuessed","GuessPanel_OldGuessDisplay","GuessPanel_GuessSelector","AudioPlayer","audioRef","useRef","Audio","songLink","isReady","current","pause","play","src","alt","width","ScoreDisplay","score","display","App","_useState","useState","_useState2","Object","slicedToArray","setHasStarted","_useState3","_useState4","setResult","_useState5","_useState6","setScore","_useState7","_useState8","displayScore","setDisplayScore","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","setSongData","_useState15","_useState16","_useState17","_useState18","setGuess","_useState19","_useState20","setOldGuesses","_useState21","_useState22","setHasGuessed","fetchSong","asyncToGenerator","regenerator_default","mark","_callee","river_round","json_river","shows","n_shows","random_show_n","show","new_link","json","source","year","location","sets","tracks","river_track","mp3_source","output_object","wrap","_context","prev","next","fetch","sent","length","floor","random","t0","t1","uuid","name","filter","track","slug","console","log","mp3_url","title","display_date","songYear","stop","_x","apply","this","arguments","previous_guesses","concat","toConsumableArray","addGuessDigit","newGuessDigit","guessLength","previous_guess","removeGuessDigit","slice","enterGuess","src_ScoreDisplay","src_AudioPlayer","GuessPanel_GuessPanel","src_KeyListener","test","element","src_App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aea04dc1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction KeyListener(props) {\n\n  useEffect(() => {\n    const handleKeyUp = (e) => {\n      props.handleKeyUp(e);\n    }\n    window.document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.document.removeEventListener('keyup', handleKeyUp);\n    }\n  }, []);\n\n  return(\n    null\n  );\n}\n\nexport default KeyListener;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction OldGuessDisplay(props) {\n\n\t\treturn(\n\t\t\tprops.oldGuesses.map((guess) => (\n\t\t\t\t<div className=\"date-row\">\n\t\t\t\t\t{[0, 1, 2, 3].map((i) => (\n\t\t\t\t\t\t\t// <div key={guess + i} className={guess.charAt(i) == props.trueYear.charAt(i) ? \"date-box date-box-correct\" : \"date-box date-box-old\"}>\n\t\t\t\t\t\t\t// \t{guess.charAt(i)}\n\t\t\t\t\t\t\t// </div>\n\t\t\t\t\t\t\t<div key={guess + i} className={guess === props.trueYear ? \"date-box date-box-old color-correct\" : Math.abs(guess - props.trueYear) < 3 ? \"date-box date-box-old color-close\" : \"date-box date-box-old color-far\"}>\n\t\t\t\t\t\t\t\t{guess.charAt(i)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))\n\t\t)\n}\n\nexport default OldGuessDisplay;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction GuessSelector(props) {\n\n  if(props.result === \"playing\") {\n  \treturn (\n  \t\t<div className=\"date-row\">\n  \t\t\t{[0, 1, 2, 3].map((i) => (\n  \t\t\t\t<div key={i} className=\"date-box\">\n  \t\t\t\t\t{props.currentGuess.charAt(i)}\n  \t\t\t\t</div>\n  \t\t\t))}\n  \t\t</div>\n  \t)\n  }\n  else if(props.result === \"start\"){\n    // this is the case at the beginning\n    return(\n      <div>\n      <div className=\"text\">\n        <span> hit enter to begin </span>\n        <span style={{fontSize: '2rem'}}> correct answers shown in <span className=\"color-correct\">green</span></span>\n        <span style={{fontSize: '2rem'}}> guesses within three years are shown in <span className=\"color-close\">yellow</span></span>\n        <span style={{fontSize: '2rem'}}> other guesses are shown in <span className=\"color-far\">red</span></span>\n      </div>\n      </div>\n    );\n  }\n  else if (props.result === \"won\"){\n    // this is the case i\n    return(\n      <div className=\"text\">\n        Yes! It was {props.songData.songTitle} from  {props.songData.songDate}  at {props.songData.songLocation}<br></br>\n        Hit enter to play again...\n      </div>\n    );\n  }\n  else if (props.result === \"lost\"){\n    return(\n      <div className=\"text\">\n        Not quite... It was {props.songData.songTitle} from  {props.songData.songDate}  at {props.songData.songLocation}<br></br>\n        Hit enter to play again...\n      </div>\n    );\n  }\n  else {\n    return(\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default GuessSelector;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport OldGuessDisplay from './OldGuessDisplay'\nimport GuessSelector from './GuessSelector'\n\n\nfunction GuessPanel({ guess, hasStarted, hasGuessed, oldGuesses, trueYear, result, songData}) {\n\n\treturn(\n    <div>\n\t\t<div className=\"box\">\n    <OldGuessDisplay oldGuesses={oldGuesses} trueYear={trueYear}/>\n    </div>\n    <div>\n\t\t<GuessSelector hasStarted={hasStarted} currentGuess={guess} result={result} songData={songData}/>\n\t\t</div>\n    </div>\n\t);\n}\n\nexport default GuessPanel;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction AudioPlayer(props) {\n\n\tconst audioRef = useRef(new Audio(props.songLink));\n\tconst isReady = useRef(false);\n\n\tuseEffect(() => {\n\t\tif(isReady.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current = new Audio(props.songLink);\n\t\t\taudioRef.current.play();\n\t\t} else {\n\t\t\tisReady.current = true;\n\t\t}\n\t}, [props.songLink]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"play-button\">\n\t\t\t\t<img src={\"./stealie.png\"} alt=\"\" style={{'width':'150px'}} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default AudioPlayer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction ScoreDisplay({score, display}) {\n  if(display == true) {\n    return(\n      <div>\n      <div className=\"score-text\">\n        Score: {score}\n      </div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default ScoreDisplay;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport KeyListener from './KeyListener'\nimport GuessPanel from './GuessPanel/GuessPanel';\nimport AudioPlayer from './AudioPlayer';\nimport ScoreDisplay from './ScoreDisplay';\n\n\nfunction App() {\n\n  // game state\n  const [hasStarted, setHasStarted] = useState(false);\n\n  const [result, setResult] = useState(\"start\");\n  const [score, setScore] = useState(0);\n  const [displayScore, setDisplayScore] = useState(false);\n\n  // song state\n  const [trueYear, setTrueYear] = useState(\"\");\n  const [songNumber, setSongNumber] = useState(\"0\");\n  const [songData, setSongData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  // guess state\n  const [guess, setGuess] = useState(\"19\");\n  const [oldGuesses, setOldGuesses] = useState([]);\n  const [hasGuessed, setHasGuessed] = useState(false);\n\n  useEffect(() => {\n\n    const fetchSong = async (props) => {\n      // const result = await fetch(\"https://relistenapi.alecgorge.com/api/v2/artists/grateful-dead/shows/random\");\n      // const json = await result.json();\n      // const source = await json['sources'][0];\n      // const year = await json['year'].year;\n      // const location = await json['venue'].name;\n      //\n      // // Get New Audio\n      // const sets = await source['sets'];\n      // const tracks = await sets[0].tracks;\n      // let n_tracks = await tracks.length;\n      // let random_track_n = await Math.floor(Math.random() * n_tracks)\n      //\n      // const track = await tracks[random_track_n];\n      // const mp3_source = await track.mp3_url;\n      //\n      // const output_object = {songLink: mp3_source, songTitle: track.title, songDate: source.display_date, songYear: year, songLocation: location};\n      //\n      // setSongData(output_object)\n\n      // 18622 - big river\n      // 18552 - sugar mag\n      const river_round = await fetch(\"https://relistenapi.alecgorge.com/api/v2/artists/grateful-dead/songs/18552\");\n      const json_river = await river_round.json();\n      const shows = await json_river['shows'];\n      let n_shows = await shows.length;\n      let random_show_n = await Math.floor(Math.random() * n_shows);\n      const show = await shows[random_show_n];\n\n      let new_link = await 'https://relistenapi.alecgorge.com/api/v3/shows/' + show.uuid;\n      const result = await fetch(new_link);\n      const json = await result.json();\n      const source = await json['sources'][0];\n      const year = await json['year'].year;\n      const location = await json['venue'].name;\n\n      // Get New Audio\n      const sets = await source['sets'];\n      const tracks = await sets[0].tracks;\n      const river_track = await tracks.filter(track => track.slug == \"sugar-magnolia\")[0];\n      console.log(river_track);\n      //let n_tracks = await tracks.length;\n      //let random_track_n = await Math.floor(Math.random() * n_tracks)\n\n      //const track = await tracks[random_track_n];\n      const mp3_source = await river_track.mp3_url;\n\n      const output_object = {songLink: mp3_source, songTitle: river_track.title, songDate: source.display_date, songYear: year, songLocation: location};\n      setSongData(output_object)\n    }\n\n    if(hasStarted & result == \"new_round\") {\n      // reset to new round when status won to lost\n      fetchSong();\n      setOldGuesses([]);\n      setGuess(\"19\");\n      setResult(\"playing\");\n    }\n    else{\n      setHasStarted(true);\n    }\n  }, [result]);\n\n  const updateTrueYear = (newTrueYear) => {\n    setTrueYear(newTrueYear);\n  }\n\n  useEffect(() => {\n    if(hasGuessed == true) {\n      if(result == \"start\") {\n        // This runs the first time through\n        setResult(\"new_round\");\n        setDisplayScore(true);\n        setHasGuessed(false);\n      }\n      if(result == \"won\") {\n        setResult(\"new_round\");\n        setHasGuessed(false)\n      }\n      if(result == \"lost\") {\n        setResult(\"new_round\");\n        setHasGuessed(false);\n      }\n      else {\n        if(guess.length == 4) {\n          setOldGuesses(previous_guesses => [...previous_guesses, guess]);\n          setGuess(\"19\");\n          if(guess == songData.songYear) {\n            setResult(\"won\");\n            setScore(score + 4 - (oldGuesses.length + 1));\n          }\n          else if(oldGuesses.length + 1 == 3) {\n            setResult(\"lost\");\n          }\n        }\n        setHasGuessed(false);\n      }\n    }\n  }, [hasGuessed]);\n\n  // handle io\n  const handleKeyUp = (e) => {\n    if(/^[0-9]/.test(e.key)) {\n      addGuessDigit(e.key)\n    }\n    if(/^Backspace$/.test(e.key)) {\n      removeGuessDigit()\n    }\n    if(/^Enter$/.test(e.key)) {\n      enterGuess();\n    }\n  }\n\n  const addGuessDigit = (newGuessDigit, guessLength) => {\n\t\tsetGuess(previous_guess => previous_guess.length < 4 ? previous_guess + newGuessDigit : previous_guess)\n\t}\n\n\tconst removeGuessDigit = () => {\n\t\tsetGuess(previous_guess => previous_guess.length > 2 ? previous_guess.slice(0, -1) : previous_guess)\n\t}\n\n\tconst enterGuess = () => {\n    setHasGuessed(true);\n\t}\n\n  return(\n    <div>\n      <ScoreDisplay score={score} display={displayScore}/>\n      <AudioPlayer songLink={songData.songLink}/>\n      <GuessPanel guess={guess} hasStarted={hasStarted} hasGuessed={hasGuessed} oldGuesses={oldGuesses} trueYear={songData.songYear} result={result} songData={songData}/>\n      <KeyListener handleKeyUp={handleKeyUp} />\n    </div>\n  );\n\n}\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst element = <App />;\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}