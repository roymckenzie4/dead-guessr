{"version":3,"sources":["KeyListener.jsx","GuessPanel/OldGuessDisplay.jsx","GuessPanel/GuessSelector.jsx","GuessPanel/GuessPanel.jsx","AudioPlayer.jsx","App.js","index.js"],"names":["KeyListener","props","useEffect","handleKeyUp","e","window","document","addEventListener","removeEventListener","OldGuessDisplay","oldGuesses","map","guess","react_default","a","createElement","className","i","key","charAt","trueYear","GuessSelector","wonRound","songData","songYear","songTitle","songDate","songLocation","currentGuess","GuessPanel","_ref","hasStarted","hasGuessed","GuessPanel_OldGuessDisplay","GuessPanel_GuessSelector","AudioPlayer","audioRef","useRef","Audio","songLink","isReady","current","pause","play","src","alt","style","width","App","_useState","useState","_useState2","Object","slicedToArray","setHasStarted","_useState3","_useState4","setWonRound","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setSongData","_useState11","_useState12","_useState13","_useState14","setGuess","_useState15","_useState16","setOldGuesses","_useState17","_useState18","setHasGuessed","asyncToGenerator","regenerator_default","mark","_callee","result","json","source","year","location","sets","tracks","n_tracks","random_track_n","track","mp3_source","output_object","wrap","_context","prev","next","fetch","sent","name","length","Math","floor","random","mp3_url","title","display_date","stop","_x","apply","this","arguments","fetchSong","previous_guesses","concat","toConsumableArray","addGuessDigit","newGuessDigit","guessLength","previous_guess","removeGuessDigit","slice","enterGuess","src_AudioPlayer","GuessPanel_GuessPanel","src_KeyListener","test","element","src_App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2d63bf0f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction KeyListener(props) {\n\n  useEffect(() => {\n    const handleKeyUp = (e) => {\n      props.handleKeyUp(e);\n    }\n    window.document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.document.removeEventListener('keyup', handleKeyUp);\n    }\n  }, []);\n\n  return(\n    null\n  );\n}\n\nexport default KeyListener;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction OldGuessDisplay(props) {\n\n\t\treturn(\n\t\t\tprops.oldGuesses.map((guess) => (\n\t\t\t\t<div className=\"date-row\">\n\t\t\t\t\t{[0, 1, 2, 3].map((i) => (\n\t\t\t\t\t\t\t<div key={guess + i} className={guess.charAt(i) == props.trueYear.charAt(i) ? \"date-box date-box-correct\" : \"date-box date-box-old\"}>\n\t\t\t\t\t\t\t\t{guess.charAt(i)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))\n\t\t)\n}\n\nexport default OldGuessDisplay;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction GuessSelector(props) {\n\n  if(!props.wonRound) {\n  \treturn (\n  \t\t<div className=\"date-row\">\n  \t\t\t{[0, 1, 2, 3].map((i) => (\n  \t\t\t\t<div key={i} className=\"date-box\">\n  \t\t\t\t\t{props.currentGuess.charAt(i)}\n  \t\t\t\t</div>\n  \t\t\t))}\n  \t\t</div>\n  \t)\n  }\n  else {\n    if(props.songData.songYear == null){\n      return(\n        <div className=\"text\">\n          Hit Enter to Begin\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className=\"text\">\n          Yes! It was {props.songData.songTitle} from  {props.songData.songDate}  at {props.songData.songLocation}<br></br>\n          Hit enter to play again...\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default GuessSelector;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport OldGuessDisplay from './OldGuessDisplay'\nimport GuessSelector from './GuessSelector'\n\n\nfunction GuessPanel({ guess, hasStarted, hasGuessed, oldGuesses, trueYear, wonRound, songData}) {\n\n\treturn(\n    <div>\n\t\t<div className=\"box\">\n    <OldGuessDisplay oldGuesses={oldGuesses} trueYear={trueYear}/>\n    </div>\n    <div>\n\t\t<GuessSelector hasStarted={hasStarted} currentGuess={guess} wonRound={wonRound} songData={songData}/>\n\t\t</div>\n    </div>\n\t);\n}\n\nexport default GuessPanel;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction AudioPlayer(props) {\n\n\tconst audioRef = useRef(new Audio(props.songLink));\n\tconst isReady = useRef(false);\n\n\tuseEffect(() => {\n\t\tif(isReady.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current = new Audio(props.songLink);\n\t\t\taudioRef.current.play();\n\t\t} else {\n\t\t\tisReady.current = true;\n\t\t}\n\t}, [props.songLink]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"play-button\">\n\t\t\t\t<img src={\"./stealie.png\"} alt=\"\" style={{'width':'150px'}} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default AudioPlayer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport KeyListener from './KeyListener'\nimport GuessPanel from './GuessPanel/GuessPanel';\nimport AudioPlayer from './AudioPlayer';\n\n\nfunction App() {\n\n  // game state\n  const [hasStarted, setHasStarted] = useState(false);\n  const [wonRound, setWonRound] = useState(true);\n\n  // song state\n  const [trueYear, setTrueYear] = useState(\"\");\n  const [songNumber, setSongNumber] = useState(\"0\");\n  const [songData, setSongData] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  // guess state\n  const [guess, setGuess] = useState(\"19\");\n  const [oldGuesses, setOldGuesses] = useState([]);\n  const [hasGuessed, setHasGuessed] = useState(false);\n\n  useEffect(() => {\n\n    const fetchSong = async (props) => {\n      const result = await fetch(\"https://api.relisten.net/api/v2/artists/grateful-dead/shows/random\");\n      const json = await result.json();\n      const source = await json['sources'][0];\n      const year = await json['year'].year;\n      const location = await json['venue'].name;\n\n      // Get New Audio\n      const sets = await source['sets'];\n      const tracks = await sets[0].tracks;\n      let n_tracks = await tracks.length;\n      let random_track_n = await Math.floor(Math.random() * n_tracks)\n\n      const track = await tracks[random_track_n];\n      const mp3_source = await track.mp3_url;\n\n      const output_object = {songLink: mp3_source, songTitle: track.title, songDate: source.display_date, songYear: year, songLocation: location};\n\n      setSongData(output_object)\n    }\n\n    if(hasStarted & !wonRound) {\n      // reset to new round when status changes from true to false\n      fetchSong();\n      setOldGuesses([]);\n      setGuess(\"19\");\n    }\n    else{\n      setHasStarted(true);\n    }\n  }, [wonRound])\n\n  const updateTrueYear = (newTrueYear) => {\n    setTrueYear(newTrueYear);\n  }\n\n  useEffect(() => {\n    if(hasGuessed == true) {\n      if(wonRound == true) {\n        setWonRound(false);\n        setHasGuessed(false);\n      }\n      else {\n        if(guess == songData.songYear) {\n          setWonRound(true);\n        }\n        if(guess.length == 4) {\n          setOldGuesses(previous_guesses => [...previous_guesses, guess]);\n          setGuess(\"19\")\n        }\n        setHasGuessed(false);\n      }\n    }\n  }, [hasGuessed]);\n\n  // handle io\n  const handleKeyUp = (e) => {\n    if(/^[0-9]/.test(e.key)) {\n      addGuessDigit(e.key)\n    }\n    if(/^Backspace$/.test(e.key)) {\n      removeGuessDigit()\n    }\n    if(/^Enter$/.test(e.key)) {\n      enterGuess();\n    }\n  }\n\n  const addGuessDigit = (newGuessDigit, guessLength) => {\n\t\tsetGuess(previous_guess => previous_guess.length < 4 ? previous_guess + newGuessDigit : previous_guess)\n\t}\n\n\tconst removeGuessDigit = () => {\n\t\tsetGuess(previous_guess => previous_guess.length > 2 ? previous_guess.slice(0, -1) : previous_guess)\n\t}\n\n\tconst enterGuess = () => {\n    setHasGuessed(true);\n\t}\n\n  return(\n    <div>\n      <AudioPlayer songLink={songData.songLink}/>\n      <GuessPanel guess={guess} hasStarted={hasStarted} hasGuessed={hasGuessed} oldGuesses={oldGuesses} trueYear={songData.songYear} wonRound={wonRound} songData={songData}/>\n      <KeyListener handleKeyUp={handleKeyUp} />\n    </div>\n  );\n\n}\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst element = <App />;\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}